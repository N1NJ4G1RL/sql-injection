#!/usr/bin/python
'''
Name: simple admin finder
Author: bon_kali
'''

import threading
import sys
import random
import optparse

try:
    import requests
except:
    sys.exit('Please install request lib first, pip install requests')

checked = []

def check( order ):
    per_thread = len(admins)/thread_num
    start = order * per_thread
    end = start + per_thread
    tmp = []

    for t in range(start, end):
        tmp.append(admins[t])

    while True:
        path_origin = random.choice(tmp)
        path = path_origin.replace('%EXT%', platform)
        tmp.remove(path_origin)

        if path not in checked:
            full_url = url + path
            try:
                r = requests.get(full_url)
            except:
                continue

            if str(r.status_code) in codes:
                print full_url,r.status_code,order

            checked.append(path)

        if len(tmp) <= 0:
            print 'finish thread', threading.currentThread().getName()
            return False

def run():
    threads = []

    for i in range(0,thread_num):
        t = threading.Thread(name='Thread %d'%i, target=check, args=(i,))
        t.start()
        threads.append(t)

    for t in threads:
        t.join()

if __name__ == '__main__':
    parser = optparse.OptionParser()
    parser.add_option('-u', '--url', action='store', dest='url', help='-u --url victim url')
    parser.add_option('-f', '--file', action='store', dest='txt', help='-f --file full admin file path\ndefault is ./admin.txt', default='./admin.txt')
    parser.add_option('-t', '--thread', action='store', dest='thread', help='-t --thread number of threads\ndefault is 3', default=3, type='int')
    parser.add_option('-c', '--code', action='store', dest='code', help='-c --code valid http response code\ndefault is 200,301,302,403', default='200,301,302,403')
    parser.add_option('-p', '--platform', action='store', dest='platform', help='-p --platform platform - php or asp or aspx\ndefault is php', default='php')

    options, args = parser.parse_args()

    '''number of threads'''
    thread_num = options.thread
    if thread_num >= 10:
        sys.exit('Number of threads < 10')

    '''http response code'''
    codes = options.code.split(',')

    if type(codes) != type([]):
        sys.exit('Invalid http response code list')

    '''victim url'''
    if not options.url:
        sys.exit('Invalid URL')

    url = options.url
    if url[-1:] != '/':
        url = url+'/'

    '''admin file'''
    try:
        with open(options.txt) as f:
            admins = f.read().splitlines()
    except:
        sys.exit('Please specify valid file path')

    '''platform'''
    platform = options.platform
    if platform not in ['php', 'asp', 'aspx']:
        sys.exit('Invalid platform')

    run()
